//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./grammar/PlSql.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPlSqlListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class PlSqlBaseListener : IPlSqlListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.swallow_to_semi"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwallow_to_semi([NotNull] PlSqlParser.Swallow_to_semiContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.swallow_to_semi"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwallow_to_semi([NotNull] PlSqlParser.Swallow_to_semiContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilation_unit([NotNull] PlSqlParser.Compilation_unitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilation_unit([NotNull] PlSqlParser.Compilation_unitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sql_script"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_script([NotNull] PlSqlParser.Sql_scriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sql_script"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_script([NotNull] PlSqlParser.Sql_scriptContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.unit_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnit_statement([NotNull] PlSqlParser.Unit_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.unit_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnit_statement([NotNull] PlSqlParser.Unit_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.declare_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclare_wrapper([NotNull] PlSqlParser.Declare_wrapperContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.declare_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclare_wrapper([NotNull] PlSqlParser.Declare_wrapperContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.is_or_as"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIs_or_as([NotNull] PlSqlParser.Is_or_asContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.is_or_as"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIs_or_as([NotNull] PlSqlParser.Is_or_asContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.drop_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_function([NotNull] PlSqlParser.Drop_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.drop_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_function([NotNull] PlSqlParser.Drop_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_function([NotNull] PlSqlParser.Alter_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_function([NotNull] PlSqlParser.Alter_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.create_function_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_function_body([NotNull] PlSqlParser.Create_function_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.create_function_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_function_body([NotNull] PlSqlParser.Create_function_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.function_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_spec([NotNull] PlSqlParser.Function_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.function_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_spec([NotNull] PlSqlParser.Function_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.parallel_enable_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParallel_enable_clause([NotNull] PlSqlParser.Parallel_enable_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.parallel_enable_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParallel_enable_clause([NotNull] PlSqlParser.Parallel_enable_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.partition_by_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartition_by_clause([NotNull] PlSqlParser.Partition_by_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.partition_by_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartition_by_clause([NotNull] PlSqlParser.Partition_by_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.result_cache_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResult_cache_clause([NotNull] PlSqlParser.Result_cache_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.result_cache_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResult_cache_clause([NotNull] PlSqlParser.Result_cache_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.relies_on_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelies_on_part([NotNull] PlSqlParser.Relies_on_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.relies_on_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelies_on_part([NotNull] PlSqlParser.Relies_on_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.streaming_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStreaming_clause([NotNull] PlSqlParser.Streaming_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.streaming_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStreaming_clause([NotNull] PlSqlParser.Streaming_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.drop_package"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_package([NotNull] PlSqlParser.Drop_packageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.drop_package"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_package([NotNull] PlSqlParser.Drop_packageContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_package"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_package([NotNull] PlSqlParser.Alter_packageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_package"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_package([NotNull] PlSqlParser.Alter_packageContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.create_package"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_package([NotNull] PlSqlParser.Create_packageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.create_package"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_package([NotNull] PlSqlParser.Create_packageContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.package_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_body([NotNull] PlSqlParser.Package_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.package_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_body([NotNull] PlSqlParser.Package_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.package_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_spec([NotNull] PlSqlParser.Package_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.package_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_spec([NotNull] PlSqlParser.Package_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.package_obj_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_obj_spec([NotNull] PlSqlParser.Package_obj_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.package_obj_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_obj_spec([NotNull] PlSqlParser.Package_obj_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.package_obj_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_obj_body([NotNull] PlSqlParser.Package_obj_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.package_obj_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_obj_body([NotNull] PlSqlParser.Package_obj_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.drop_procedure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_procedure([NotNull] PlSqlParser.Drop_procedureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.drop_procedure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_procedure([NotNull] PlSqlParser.Drop_procedureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_procedure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_procedure([NotNull] PlSqlParser.Alter_procedureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_procedure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_procedure([NotNull] PlSqlParser.Alter_procedureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.create_procedure_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_procedure_body([NotNull] PlSqlParser.Create_procedure_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.create_procedure_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_procedure_body([NotNull] PlSqlParser.Create_procedure_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.procedure_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedure_spec([NotNull] PlSqlParser.Procedure_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.procedure_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedure_spec([NotNull] PlSqlParser.Procedure_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.drop_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_trigger([NotNull] PlSqlParser.Drop_triggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.drop_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_trigger([NotNull] PlSqlParser.Drop_triggerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_trigger([NotNull] PlSqlParser.Alter_triggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_trigger([NotNull] PlSqlParser.Alter_triggerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.create_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_trigger([NotNull] PlSqlParser.Create_triggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.create_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_trigger([NotNull] PlSqlParser.Create_triggerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.trigger_follows_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger_follows_clause([NotNull] PlSqlParser.Trigger_follows_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.trigger_follows_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger_follows_clause([NotNull] PlSqlParser.Trigger_follows_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.trigger_when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger_when_clause([NotNull] PlSqlParser.Trigger_when_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.trigger_when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger_when_clause([NotNull] PlSqlParser.Trigger_when_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.simple_dml_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_dml_trigger([NotNull] PlSqlParser.Simple_dml_triggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.simple_dml_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_dml_trigger([NotNull] PlSqlParser.Simple_dml_triggerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.for_each_row"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_each_row([NotNull] PlSqlParser.For_each_rowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.for_each_row"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_each_row([NotNull] PlSqlParser.For_each_rowContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.compound_dml_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_dml_trigger([NotNull] PlSqlParser.Compound_dml_triggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.compound_dml_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_dml_trigger([NotNull] PlSqlParser.Compound_dml_triggerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.non_dml_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_dml_trigger([NotNull] PlSqlParser.Non_dml_triggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.non_dml_trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_dml_trigger([NotNull] PlSqlParser.Non_dml_triggerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.trigger_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger_body([NotNull] PlSqlParser.Trigger_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.trigger_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger_body([NotNull] PlSqlParser.Trigger_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.routine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoutine_clause([NotNull] PlSqlParser.Routine_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.routine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoutine_clause([NotNull] PlSqlParser.Routine_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.compound_trigger_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_trigger_block([NotNull] PlSqlParser.Compound_trigger_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.compound_trigger_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_trigger_block([NotNull] PlSqlParser.Compound_trigger_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.timing_point_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTiming_point_section([NotNull] PlSqlParser.Timing_point_sectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.timing_point_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTiming_point_section([NotNull] PlSqlParser.Timing_point_sectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.non_dml_event"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_dml_event([NotNull] PlSqlParser.Non_dml_eventContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.non_dml_event"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_dml_event([NotNull] PlSqlParser.Non_dml_eventContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.dml_event_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDml_event_clause([NotNull] PlSqlParser.Dml_event_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.dml_event_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDml_event_clause([NotNull] PlSqlParser.Dml_event_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.dml_event_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDml_event_element([NotNull] PlSqlParser.Dml_event_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.dml_event_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDml_event_element([NotNull] PlSqlParser.Dml_event_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.dml_event_nested_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDml_event_nested_clause([NotNull] PlSqlParser.Dml_event_nested_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.dml_event_nested_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDml_event_nested_clause([NotNull] PlSqlParser.Dml_event_nested_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.referencing_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferencing_clause([NotNull] PlSqlParser.Referencing_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.referencing_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferencing_clause([NotNull] PlSqlParser.Referencing_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.referencing_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferencing_element([NotNull] PlSqlParser.Referencing_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.referencing_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferencing_element([NotNull] PlSqlParser.Referencing_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.drop_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_type([NotNull] PlSqlParser.Drop_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.drop_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_type([NotNull] PlSqlParser.Drop_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_type([NotNull] PlSqlParser.Alter_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_type([NotNull] PlSqlParser.Alter_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.compile_type_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompile_type_clause([NotNull] PlSqlParser.Compile_type_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.compile_type_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompile_type_clause([NotNull] PlSqlParser.Compile_type_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.replace_type_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReplace_type_clause([NotNull] PlSqlParser.Replace_type_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.replace_type_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReplace_type_clause([NotNull] PlSqlParser.Replace_type_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_method_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_method_spec([NotNull] PlSqlParser.Alter_method_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_method_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_method_spec([NotNull] PlSqlParser.Alter_method_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_method_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_method_element([NotNull] PlSqlParser.Alter_method_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_method_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_method_element([NotNull] PlSqlParser.Alter_method_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_attribute_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_attribute_definition([NotNull] PlSqlParser.Alter_attribute_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_attribute_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_attribute_definition([NotNull] PlSqlParser.Alter_attribute_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.attribute_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_definition([NotNull] PlSqlParser.Attribute_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.attribute_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_definition([NotNull] PlSqlParser.Attribute_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_collection_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_collection_clauses([NotNull] PlSqlParser.Alter_collection_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_collection_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_collection_clauses([NotNull] PlSqlParser.Alter_collection_clausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.dependent_handling_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDependent_handling_clause([NotNull] PlSqlParser.Dependent_handling_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.dependent_handling_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDependent_handling_clause([NotNull] PlSqlParser.Dependent_handling_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.dependent_exceptions_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDependent_exceptions_part([NotNull] PlSqlParser.Dependent_exceptions_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.dependent_exceptions_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDependent_exceptions_part([NotNull] PlSqlParser.Dependent_exceptions_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.create_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_type([NotNull] PlSqlParser.Create_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.create_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_type([NotNull] PlSqlParser.Create_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_definition([NotNull] PlSqlParser.Type_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_definition([NotNull] PlSqlParser.Type_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.object_type_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_type_def([NotNull] PlSqlParser.Object_type_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.object_type_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_type_def([NotNull] PlSqlParser.Object_type_defContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.object_as_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_as_part([NotNull] PlSqlParser.Object_as_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.object_as_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_as_part([NotNull] PlSqlParser.Object_as_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.object_under_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_under_part([NotNull] PlSqlParser.Object_under_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.object_under_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_under_part([NotNull] PlSqlParser.Object_under_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.nested_table_type_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNested_table_type_def([NotNull] PlSqlParser.Nested_table_type_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.nested_table_type_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNested_table_type_def([NotNull] PlSqlParser.Nested_table_type_defContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sqlj_object_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqlj_object_type([NotNull] PlSqlParser.Sqlj_object_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sqlj_object_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqlj_object_type([NotNull] PlSqlParser.Sqlj_object_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_body([NotNull] PlSqlParser.Type_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_body([NotNull] PlSqlParser.Type_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_body_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_body_elements([NotNull] PlSqlParser.Type_body_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_body_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_body_elements([NotNull] PlSqlParser.Type_body_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.map_order_func_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMap_order_func_declaration([NotNull] PlSqlParser.Map_order_func_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.map_order_func_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMap_order_func_declaration([NotNull] PlSqlParser.Map_order_func_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subprog_decl_in_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubprog_decl_in_type([NotNull] PlSqlParser.Subprog_decl_in_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subprog_decl_in_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubprog_decl_in_type([NotNull] PlSqlParser.Subprog_decl_in_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.proc_decl_in_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProc_decl_in_type([NotNull] PlSqlParser.Proc_decl_in_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.proc_decl_in_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProc_decl_in_type([NotNull] PlSqlParser.Proc_decl_in_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.func_decl_in_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_decl_in_type([NotNull] PlSqlParser.Func_decl_in_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.func_decl_in_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_decl_in_type([NotNull] PlSqlParser.Func_decl_in_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.constructor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_declaration([NotNull] PlSqlParser.Constructor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.constructor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_declaration([NotNull] PlSqlParser.Constructor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.modifier_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModifier_clause([NotNull] PlSqlParser.Modifier_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.modifier_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModifier_clause([NotNull] PlSqlParser.Modifier_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.object_member_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_member_spec([NotNull] PlSqlParser.Object_member_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.object_member_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_member_spec([NotNull] PlSqlParser.Object_member_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sqlj_object_type_attr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqlj_object_type_attr([NotNull] PlSqlParser.Sqlj_object_type_attrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sqlj_object_type_attr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqlj_object_type_attr([NotNull] PlSqlParser.Sqlj_object_type_attrContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.element_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement_spec([NotNull] PlSqlParser.Element_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.element_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement_spec([NotNull] PlSqlParser.Element_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.element_spec_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement_spec_options([NotNull] PlSqlParser.Element_spec_optionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.element_spec_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement_spec_options([NotNull] PlSqlParser.Element_spec_optionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subprogram_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubprogram_spec([NotNull] PlSqlParser.Subprogram_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subprogram_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubprogram_spec([NotNull] PlSqlParser.Subprogram_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_procedure_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_procedure_spec([NotNull] PlSqlParser.Type_procedure_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_procedure_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_procedure_spec([NotNull] PlSqlParser.Type_procedure_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_function_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_function_spec([NotNull] PlSqlParser.Type_function_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_function_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_function_spec([NotNull] PlSqlParser.Type_function_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.constructor_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_spec([NotNull] PlSqlParser.Constructor_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.constructor_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_spec([NotNull] PlSqlParser.Constructor_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.map_order_function_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMap_order_function_spec([NotNull] PlSqlParser.Map_order_function_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.map_order_function_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMap_order_function_spec([NotNull] PlSqlParser.Map_order_function_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pragma_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPragma_clause([NotNull] PlSqlParser.Pragma_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pragma_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPragma_clause([NotNull] PlSqlParser.Pragma_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pragma_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPragma_elements([NotNull] PlSqlParser.Pragma_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pragma_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPragma_elements([NotNull] PlSqlParser.Pragma_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_elements_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_elements_parameter([NotNull] PlSqlParser.Type_elements_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_elements_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_elements_parameter([NotNull] PlSqlParser.Type_elements_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.drop_sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_sequence([NotNull] PlSqlParser.Drop_sequenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.drop_sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_sequence([NotNull] PlSqlParser.Drop_sequenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alter_sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_sequence([NotNull] PlSqlParser.Alter_sequenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alter_sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_sequence([NotNull] PlSqlParser.Alter_sequenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.create_sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_sequence([NotNull] PlSqlParser.Create_sequenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.create_sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_sequence([NotNull] PlSqlParser.Create_sequenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sequence_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequence_spec([NotNull] PlSqlParser.Sequence_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sequence_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequence_spec([NotNull] PlSqlParser.Sequence_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sequence_start_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequence_start_clause([NotNull] PlSqlParser.Sequence_start_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sequence_start_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequence_start_clause([NotNull] PlSqlParser.Sequence_start_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.invoker_rights_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvoker_rights_clause([NotNull] PlSqlParser.Invoker_rights_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.invoker_rights_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvoker_rights_clause([NotNull] PlSqlParser.Invoker_rights_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.compiler_parameters_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompiler_parameters_clause([NotNull] PlSqlParser.Compiler_parameters_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.compiler_parameters_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompiler_parameters_clause([NotNull] PlSqlParser.Compiler_parameters_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.call_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall_spec([NotNull] PlSqlParser.Call_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.call_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall_spec([NotNull] PlSqlParser.Call_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.java_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJava_spec([NotNull] PlSqlParser.Java_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.java_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJava_spec([NotNull] PlSqlParser.Java_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.c_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterC_spec([NotNull] PlSqlParser.C_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.c_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitC_spec([NotNull] PlSqlParser.C_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.c_agent_in_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterC_agent_in_clause([NotNull] PlSqlParser.C_agent_in_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.c_agent_in_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitC_agent_in_clause([NotNull] PlSqlParser.C_agent_in_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.c_parameters_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterC_parameters_clause([NotNull] PlSqlParser.C_parameters_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.c_parameters_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitC_parameters_clause([NotNull] PlSqlParser.C_parameters_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] PlSqlParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] PlSqlParser.ParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.default_value_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefault_value_part([NotNull] PlSqlParser.Default_value_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.default_value_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefault_value_part([NotNull] PlSqlParser.Default_value_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.declare_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclare_spec([NotNull] PlSqlParser.Declare_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.declare_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclare_spec([NotNull] PlSqlParser.Declare_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declaration([NotNull] PlSqlParser.Variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declaration([NotNull] PlSqlParser.Variable_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subtype_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtype_declaration([NotNull] PlSqlParser.Subtype_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subtype_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtype_declaration([NotNull] PlSqlParser.Subtype_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cursor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCursor_declaration([NotNull] PlSqlParser.Cursor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cursor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCursor_declaration([NotNull] PlSqlParser.Cursor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.parameter_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_spec([NotNull] PlSqlParser.Parameter_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.parameter_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_spec([NotNull] PlSqlParser.Parameter_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.exception_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterException_declaration([NotNull] PlSqlParser.Exception_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.exception_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitException_declaration([NotNull] PlSqlParser.Exception_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pragma_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPragma_declaration([NotNull] PlSqlParser.Pragma_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pragma_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPragma_declaration([NotNull] PlSqlParser.Pragma_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.record_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecord_declaration([NotNull] PlSqlParser.Record_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.record_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecord_declaration([NotNull] PlSqlParser.Record_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.record_type_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecord_type_dec([NotNull] PlSqlParser.Record_type_decContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.record_type_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecord_type_dec([NotNull] PlSqlParser.Record_type_decContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.field_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_spec([NotNull] PlSqlParser.Field_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.field_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_spec([NotNull] PlSqlParser.Field_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.record_var_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecord_var_dec([NotNull] PlSqlParser.Record_var_decContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.record_var_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecord_var_dec([NotNull] PlSqlParser.Record_var_decContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_declaration([NotNull] PlSqlParser.Table_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_declaration([NotNull] PlSqlParser.Table_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_type_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_type_dec([NotNull] PlSqlParser.Table_type_decContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_type_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_type_dec([NotNull] PlSqlParser.Table_type_decContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_indexed_by_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_indexed_by_part([NotNull] PlSqlParser.Table_indexed_by_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_indexed_by_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_indexed_by_part([NotNull] PlSqlParser.Table_indexed_by_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.varray_type_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarray_type_def([NotNull] PlSqlParser.Varray_type_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.varray_type_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarray_type_def([NotNull] PlSqlParser.Varray_type_defContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_var_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_var_dec([NotNull] PlSqlParser.Table_var_decContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_var_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_var_dec([NotNull] PlSqlParser.Table_var_decContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.seq_of_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeq_of_statements([NotNull] PlSqlParser.Seq_of_statementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.seq_of_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeq_of_statements([NotNull] PlSqlParser.Seq_of_statementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.label_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel_declaration([NotNull] PlSqlParser.Label_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.label_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel_declaration([NotNull] PlSqlParser.Label_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] PlSqlParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] PlSqlParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.assignment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_statement([NotNull] PlSqlParser.Assignment_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.assignment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_statement([NotNull] PlSqlParser.Assignment_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.continue_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinue_statement([NotNull] PlSqlParser.Continue_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.continue_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinue_statement([NotNull] PlSqlParser.Continue_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.exit_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExit_statement([NotNull] PlSqlParser.Exit_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.exit_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExit_statement([NotNull] PlSqlParser.Exit_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.goto_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoto_statement([NotNull] PlSqlParser.Goto_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.goto_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoto_statement([NotNull] PlSqlParser.Goto_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] PlSqlParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] PlSqlParser.If_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.elsif_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElsif_part([NotNull] PlSqlParser.Elsif_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.elsif_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElsif_part([NotNull] PlSqlParser.Elsif_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.else_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_part([NotNull] PlSqlParser.Else_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.else_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_part([NotNull] PlSqlParser.Else_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.loop_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop_statement([NotNull] PlSqlParser.Loop_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.loop_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop_statement([NotNull] PlSqlParser.Loop_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cursor_loop_param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCursor_loop_param([NotNull] PlSqlParser.Cursor_loop_paramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cursor_loop_param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCursor_loop_param([NotNull] PlSqlParser.Cursor_loop_paramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.forall_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForall_statement([NotNull] PlSqlParser.Forall_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.forall_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForall_statement([NotNull] PlSqlParser.Forall_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.bounds_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBounds_clause([NotNull] PlSqlParser.Bounds_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.bounds_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBounds_clause([NotNull] PlSqlParser.Bounds_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.between_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetween_bound([NotNull] PlSqlParser.Between_boundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.between_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetween_bound([NotNull] PlSqlParser.Between_boundContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.lower_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLower_bound([NotNull] PlSqlParser.Lower_boundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.lower_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLower_bound([NotNull] PlSqlParser.Lower_boundContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.upper_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpper_bound([NotNull] PlSqlParser.Upper_boundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.upper_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpper_bound([NotNull] PlSqlParser.Upper_boundContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.null_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNull_statement([NotNull] PlSqlParser.Null_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.null_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNull_statement([NotNull] PlSqlParser.Null_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.raise_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaise_statement([NotNull] PlSqlParser.Raise_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.raise_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaise_statement([NotNull] PlSqlParser.Raise_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] PlSqlParser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] PlSqlParser.Return_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call([NotNull] PlSqlParser.Function_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call([NotNull] PlSqlParser.Function_callContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] PlSqlParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] PlSqlParser.BodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.collection_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection_statement([NotNull] PlSqlParser.Collection_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.collection_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection_statement([NotNull] PlSqlParser.Collection_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pipe_row"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPipe_row([NotNull] PlSqlParser.Pipe_rowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pipe_row"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPipe_row([NotNull] PlSqlParser.Pipe_rowContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.exception_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterException_clause([NotNull] PlSqlParser.Exception_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.exception_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitException_clause([NotNull] PlSqlParser.Exception_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.exception_handler"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterException_handler([NotNull] PlSqlParser.Exception_handlerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.exception_handler"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitException_handler([NotNull] PlSqlParser.Exception_handlerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.trigger_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger_block([NotNull] PlSqlParser.Trigger_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.trigger_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger_block([NotNull] PlSqlParser.Trigger_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] PlSqlParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] PlSqlParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sql_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_statement([NotNull] PlSqlParser.Sql_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sql_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_statement([NotNull] PlSqlParser.Sql_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.execute_immediate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExecute_immediate([NotNull] PlSqlParser.Execute_immediateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.execute_immediate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExecute_immediate([NotNull] PlSqlParser.Execute_immediateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.dynamic_returning_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDynamic_returning_clause([NotNull] PlSqlParser.Dynamic_returning_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.dynamic_returning_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDynamic_returning_clause([NotNull] PlSqlParser.Dynamic_returning_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.data_manipulation_language_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData_manipulation_language_statements([NotNull] PlSqlParser.Data_manipulation_language_statementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.data_manipulation_language_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData_manipulation_language_statements([NotNull] PlSqlParser.Data_manipulation_language_statementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cursor_manipulation_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCursor_manipulation_statements([NotNull] PlSqlParser.Cursor_manipulation_statementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cursor_manipulation_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCursor_manipulation_statements([NotNull] PlSqlParser.Cursor_manipulation_statementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.close_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClose_statement([NotNull] PlSqlParser.Close_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.close_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClose_statement([NotNull] PlSqlParser.Close_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.open_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_statement([NotNull] PlSqlParser.Open_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.open_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_statement([NotNull] PlSqlParser.Open_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.fetch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFetch_statement([NotNull] PlSqlParser.Fetch_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.fetch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFetch_statement([NotNull] PlSqlParser.Fetch_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.open_for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_for_statement([NotNull] PlSqlParser.Open_for_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.open_for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_for_statement([NotNull] PlSqlParser.Open_for_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.transaction_control_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTransaction_control_statements([NotNull] PlSqlParser.Transaction_control_statementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.transaction_control_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTransaction_control_statements([NotNull] PlSqlParser.Transaction_control_statementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.set_transaction_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_transaction_command([NotNull] PlSqlParser.Set_transaction_commandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.set_transaction_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_transaction_command([NotNull] PlSqlParser.Set_transaction_commandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.set_constraint_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_constraint_command([NotNull] PlSqlParser.Set_constraint_commandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.set_constraint_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_constraint_command([NotNull] PlSqlParser.Set_constraint_commandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.commit_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommit_statement([NotNull] PlSqlParser.Commit_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.commit_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommit_statement([NotNull] PlSqlParser.Commit_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.write_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWrite_clause([NotNull] PlSqlParser.Write_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.write_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWrite_clause([NotNull] PlSqlParser.Write_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.rollback_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRollback_statement([NotNull] PlSqlParser.Rollback_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.rollback_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRollback_statement([NotNull] PlSqlParser.Rollback_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.savepoint_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSavepoint_statement([NotNull] PlSqlParser.Savepoint_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.savepoint_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSavepoint_statement([NotNull] PlSqlParser.Savepoint_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.explain_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplain_statement([NotNull] PlSqlParser.Explain_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.explain_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplain_statement([NotNull] PlSqlParser.Explain_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_statement([NotNull] PlSqlParser.Select_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_statement([NotNull] PlSqlParser.Select_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subquery_factoring_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery_factoring_clause([NotNull] PlSqlParser.Subquery_factoring_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subquery_factoring_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery_factoring_clause([NotNull] PlSqlParser.Subquery_factoring_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.factoring_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactoring_element([NotNull] PlSqlParser.Factoring_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.factoring_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactoring_element([NotNull] PlSqlParser.Factoring_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.search_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSearch_clause([NotNull] PlSqlParser.Search_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.search_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSearch_clause([NotNull] PlSqlParser.Search_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cycle_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCycle_clause([NotNull] PlSqlParser.Cycle_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cycle_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCycle_clause([NotNull] PlSqlParser.Cycle_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery([NotNull] PlSqlParser.SubqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery([NotNull] PlSqlParser.SubqueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subquery_operation_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery_operation_part([NotNull] PlSqlParser.Subquery_operation_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subquery_operation_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery_operation_part([NotNull] PlSqlParser.Subquery_operation_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subquery_basic_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery_basic_elements([NotNull] PlSqlParser.Subquery_basic_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subquery_basic_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery_basic_elements([NotNull] PlSqlParser.Subquery_basic_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.query_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_block([NotNull] PlSqlParser.Query_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.query_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_block([NotNull] PlSqlParser.Query_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.selected_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelected_element([NotNull] PlSqlParser.Selected_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.selected_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelected_element([NotNull] PlSqlParser.Selected_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrom_clause([NotNull] PlSqlParser.From_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrom_clause([NotNull] PlSqlParser.From_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.select_list_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_list_elements([NotNull] PlSqlParser.Select_list_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.select_list_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_list_elements([NotNull] PlSqlParser.Select_list_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_ref_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_ref_list([NotNull] PlSqlParser.Table_ref_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_ref_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_ref_list([NotNull] PlSqlParser.Table_ref_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_ref([NotNull] PlSqlParser.Table_refContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_ref([NotNull] PlSqlParser.Table_refContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_ref_aux"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_ref_aux([NotNull] PlSqlParser.Table_ref_auxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_ref_aux"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_ref_aux([NotNull] PlSqlParser.Table_ref_auxContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_clause([NotNull] PlSqlParser.Join_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_clause([NotNull] PlSqlParser.Join_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.join_on_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_on_part([NotNull] PlSqlParser.Join_on_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.join_on_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_on_part([NotNull] PlSqlParser.Join_on_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.join_using_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_using_part([NotNull] PlSqlParser.Join_using_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.join_using_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_using_part([NotNull] PlSqlParser.Join_using_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.outer_join_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOuter_join_type([NotNull] PlSqlParser.Outer_join_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.outer_join_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOuter_join_type([NotNull] PlSqlParser.Outer_join_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.query_partition_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_partition_clause([NotNull] PlSqlParser.Query_partition_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.query_partition_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_partition_clause([NotNull] PlSqlParser.Query_partition_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.flashback_query_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlashback_query_clause([NotNull] PlSqlParser.Flashback_query_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.flashback_query_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlashback_query_clause([NotNull] PlSqlParser.Flashback_query_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pivot_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPivot_clause([NotNull] PlSqlParser.Pivot_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pivot_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPivot_clause([NotNull] PlSqlParser.Pivot_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pivot_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPivot_element([NotNull] PlSqlParser.Pivot_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pivot_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPivot_element([NotNull] PlSqlParser.Pivot_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pivot_for_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPivot_for_clause([NotNull] PlSqlParser.Pivot_for_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pivot_for_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPivot_for_clause([NotNull] PlSqlParser.Pivot_for_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pivot_in_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPivot_in_clause([NotNull] PlSqlParser.Pivot_in_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pivot_in_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPivot_in_clause([NotNull] PlSqlParser.Pivot_in_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pivot_in_clause_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPivot_in_clause_element([NotNull] PlSqlParser.Pivot_in_clause_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pivot_in_clause_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPivot_in_clause_element([NotNull] PlSqlParser.Pivot_in_clause_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.pivot_in_clause_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPivot_in_clause_elements([NotNull] PlSqlParser.Pivot_in_clause_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.pivot_in_clause_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPivot_in_clause_elements([NotNull] PlSqlParser.Pivot_in_clause_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.unpivot_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpivot_clause([NotNull] PlSqlParser.Unpivot_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.unpivot_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpivot_clause([NotNull] PlSqlParser.Unpivot_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.unpivot_in_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpivot_in_clause([NotNull] PlSqlParser.Unpivot_in_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.unpivot_in_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpivot_in_clause([NotNull] PlSqlParser.Unpivot_in_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.unpivot_in_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpivot_in_elements([NotNull] PlSqlParser.Unpivot_in_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.unpivot_in_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpivot_in_elements([NotNull] PlSqlParser.Unpivot_in_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.hierarchical_query_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHierarchical_query_clause([NotNull] PlSqlParser.Hierarchical_query_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.hierarchical_query_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHierarchical_query_clause([NotNull] PlSqlParser.Hierarchical_query_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.start_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart_part([NotNull] PlSqlParser.Start_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.start_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart_part([NotNull] PlSqlParser.Start_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.group_by_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup_by_clause([NotNull] PlSqlParser.Group_by_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.group_by_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup_by_clause([NotNull] PlSqlParser.Group_by_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.group_by_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup_by_elements([NotNull] PlSqlParser.Group_by_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.group_by_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup_by_elements([NotNull] PlSqlParser.Group_by_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.rollup_cube_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRollup_cube_clause([NotNull] PlSqlParser.Rollup_cube_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.rollup_cube_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRollup_cube_clause([NotNull] PlSqlParser.Rollup_cube_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.grouping_sets_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrouping_sets_clause([NotNull] PlSqlParser.Grouping_sets_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.grouping_sets_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrouping_sets_clause([NotNull] PlSqlParser.Grouping_sets_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.grouping_sets_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrouping_sets_elements([NotNull] PlSqlParser.Grouping_sets_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.grouping_sets_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrouping_sets_elements([NotNull] PlSqlParser.Grouping_sets_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.having_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHaving_clause([NotNull] PlSqlParser.Having_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.having_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHaving_clause([NotNull] PlSqlParser.Having_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_clause([NotNull] PlSqlParser.Model_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_clause([NotNull] PlSqlParser.Model_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cell_reference_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCell_reference_options([NotNull] PlSqlParser.Cell_reference_optionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cell_reference_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCell_reference_options([NotNull] PlSqlParser.Cell_reference_optionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.return_rows_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_rows_clause([NotNull] PlSqlParser.Return_rows_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.return_rows_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_rows_clause([NotNull] PlSqlParser.Return_rows_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.reference_model"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReference_model([NotNull] PlSqlParser.Reference_modelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.reference_model"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReference_model([NotNull] PlSqlParser.Reference_modelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.main_model"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain_model([NotNull] PlSqlParser.Main_modelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.main_model"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain_model([NotNull] PlSqlParser.Main_modelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_column_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_column_clauses([NotNull] PlSqlParser.Model_column_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_column_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_column_clauses([NotNull] PlSqlParser.Model_column_clausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_column_partition_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_column_partition_part([NotNull] PlSqlParser.Model_column_partition_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_column_partition_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_column_partition_part([NotNull] PlSqlParser.Model_column_partition_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_column_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_column_list([NotNull] PlSqlParser.Model_column_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_column_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_column_list([NotNull] PlSqlParser.Model_column_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_column([NotNull] PlSqlParser.Model_columnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_column([NotNull] PlSqlParser.Model_columnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_rules_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_rules_clause([NotNull] PlSqlParser.Model_rules_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_rules_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_rules_clause([NotNull] PlSqlParser.Model_rules_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_rules_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_rules_part([NotNull] PlSqlParser.Model_rules_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_rules_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_rules_part([NotNull] PlSqlParser.Model_rules_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_rules_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_rules_element([NotNull] PlSqlParser.Model_rules_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_rules_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_rules_element([NotNull] PlSqlParser.Model_rules_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cell_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCell_assignment([NotNull] PlSqlParser.Cell_assignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cell_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCell_assignment([NotNull] PlSqlParser.Cell_assignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_iterate_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_iterate_clause([NotNull] PlSqlParser.Model_iterate_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_iterate_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_iterate_clause([NotNull] PlSqlParser.Model_iterate_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.until_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntil_part([NotNull] PlSqlParser.Until_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.until_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntil_part([NotNull] PlSqlParser.Until_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.order_by_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrder_by_clause([NotNull] PlSqlParser.Order_by_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.order_by_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrder_by_clause([NotNull] PlSqlParser.Order_by_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.order_by_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrder_by_elements([NotNull] PlSqlParser.Order_by_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.order_by_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrder_by_elements([NotNull] PlSqlParser.Order_by_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.for_update_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_update_clause([NotNull] PlSqlParser.For_update_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.for_update_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_update_clause([NotNull] PlSqlParser.For_update_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.for_update_of_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_update_of_part([NotNull] PlSqlParser.For_update_of_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.for_update_of_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_update_of_part([NotNull] PlSqlParser.For_update_of_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.for_update_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_update_options([NotNull] PlSqlParser.For_update_optionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.for_update_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_update_options([NotNull] PlSqlParser.For_update_optionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.update_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpdate_statement([NotNull] PlSqlParser.Update_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.update_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpdate_statement([NotNull] PlSqlParser.Update_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.update_set_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpdate_set_clause([NotNull] PlSqlParser.Update_set_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.update_set_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpdate_set_clause([NotNull] PlSqlParser.Update_set_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.column_based_update_set_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_based_update_set_clause([NotNull] PlSqlParser.Column_based_update_set_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.column_based_update_set_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_based_update_set_clause([NotNull] PlSqlParser.Column_based_update_set_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.delete_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelete_statement([NotNull] PlSqlParser.Delete_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.delete_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelete_statement([NotNull] PlSqlParser.Delete_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.insert_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInsert_statement([NotNull] PlSqlParser.Insert_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.insert_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInsert_statement([NotNull] PlSqlParser.Insert_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.single_table_insert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingle_table_insert([NotNull] PlSqlParser.Single_table_insertContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.single_table_insert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingle_table_insert([NotNull] PlSqlParser.Single_table_insertContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.multi_table_insert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulti_table_insert([NotNull] PlSqlParser.Multi_table_insertContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.multi_table_insert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulti_table_insert([NotNull] PlSqlParser.Multi_table_insertContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.multi_table_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulti_table_element([NotNull] PlSqlParser.Multi_table_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.multi_table_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulti_table_element([NotNull] PlSqlParser.Multi_table_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.conditional_insert_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_insert_clause([NotNull] PlSqlParser.Conditional_insert_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.conditional_insert_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_insert_clause([NotNull] PlSqlParser.Conditional_insert_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.conditional_insert_when_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_insert_when_part([NotNull] PlSqlParser.Conditional_insert_when_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.conditional_insert_when_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_insert_when_part([NotNull] PlSqlParser.Conditional_insert_when_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.conditional_insert_else_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_insert_else_part([NotNull] PlSqlParser.Conditional_insert_else_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.conditional_insert_else_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_insert_else_part([NotNull] PlSqlParser.Conditional_insert_else_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.insert_into_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInsert_into_clause([NotNull] PlSqlParser.Insert_into_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.insert_into_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInsert_into_clause([NotNull] PlSqlParser.Insert_into_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.values_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValues_clause([NotNull] PlSqlParser.Values_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.values_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValues_clause([NotNull] PlSqlParser.Values_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.merge_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMerge_statement([NotNull] PlSqlParser.Merge_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.merge_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMerge_statement([NotNull] PlSqlParser.Merge_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.merge_update_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMerge_update_clause([NotNull] PlSqlParser.Merge_update_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.merge_update_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMerge_update_clause([NotNull] PlSqlParser.Merge_update_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.merge_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMerge_element([NotNull] PlSqlParser.Merge_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.merge_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMerge_element([NotNull] PlSqlParser.Merge_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.merge_update_delete_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMerge_update_delete_part([NotNull] PlSqlParser.Merge_update_delete_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.merge_update_delete_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMerge_update_delete_part([NotNull] PlSqlParser.Merge_update_delete_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.merge_insert_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMerge_insert_clause([NotNull] PlSqlParser.Merge_insert_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.merge_insert_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMerge_insert_clause([NotNull] PlSqlParser.Merge_insert_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.selected_tableview"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelected_tableview([NotNull] PlSqlParser.Selected_tableviewContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.selected_tableview"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelected_tableview([NotNull] PlSqlParser.Selected_tableviewContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.lock_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLock_table_statement([NotNull] PlSqlParser.Lock_table_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.lock_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLock_table_statement([NotNull] PlSqlParser.Lock_table_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.wait_nowait_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWait_nowait_part([NotNull] PlSqlParser.Wait_nowait_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.wait_nowait_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWait_nowait_part([NotNull] PlSqlParser.Wait_nowait_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.lock_table_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLock_table_element([NotNull] PlSqlParser.Lock_table_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.lock_table_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLock_table_element([NotNull] PlSqlParser.Lock_table_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.lock_mode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLock_mode([NotNull] PlSqlParser.Lock_modeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.lock_mode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLock_mode([NotNull] PlSqlParser.Lock_modeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.general_table_ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneral_table_ref([NotNull] PlSqlParser.General_table_refContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.general_table_ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneral_table_ref([NotNull] PlSqlParser.General_table_refContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.static_returning_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatic_returning_clause([NotNull] PlSqlParser.Static_returning_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.static_returning_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatic_returning_clause([NotNull] PlSqlParser.Static_returning_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.error_logging_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterError_logging_clause([NotNull] PlSqlParser.Error_logging_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.error_logging_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitError_logging_clause([NotNull] PlSqlParser.Error_logging_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.error_logging_into_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterError_logging_into_part([NotNull] PlSqlParser.Error_logging_into_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.error_logging_into_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitError_logging_into_part([NotNull] PlSqlParser.Error_logging_into_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.error_logging_reject_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterError_logging_reject_part([NotNull] PlSqlParser.Error_logging_reject_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.error_logging_reject_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitError_logging_reject_part([NotNull] PlSqlParser.Error_logging_reject_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.dml_table_expression_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDml_table_expression_clause([NotNull] PlSqlParser.Dml_table_expression_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.dml_table_expression_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDml_table_expression_clause([NotNull] PlSqlParser.Dml_table_expression_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_collection_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_collection_expression([NotNull] PlSqlParser.Table_collection_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_collection_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_collection_expression([NotNull] PlSqlParser.Table_collection_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.subquery_restriction_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery_restriction_clause([NotNull] PlSqlParser.Subquery_restriction_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.subquery_restriction_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery_restriction_clause([NotNull] PlSqlParser.Subquery_restriction_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sample_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSample_clause([NotNull] PlSqlParser.Sample_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sample_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSample_clause([NotNull] PlSqlParser.Sample_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.seed_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeed_part([NotNull] PlSqlParser.Seed_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.seed_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeed_part([NotNull] PlSqlParser.Seed_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cursor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCursor_expression([NotNull] PlSqlParser.Cursor_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cursor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCursor_expression([NotNull] PlSqlParser.Cursor_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sql_cursor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_cursor_expression([NotNull] PlSqlParser.Sql_cursor_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sql_cursor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_cursor_expression([NotNull] PlSqlParser.Sql_cursor_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.collection_assoc_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection_assoc_expression([NotNull] PlSqlParser.Collection_assoc_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.collection_assoc_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection_assoc_expression([NotNull] PlSqlParser.Collection_assoc_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.collection_type_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection_type_expression([NotNull] PlSqlParser.Collection_type_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.collection_type_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection_type_expression([NotNull] PlSqlParser.Collection_type_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_list([NotNull] PlSqlParser.Expression_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_list([NotNull] PlSqlParser.Expression_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] PlSqlParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] PlSqlParser.ConditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.condition_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition_wrapper([NotNull] PlSqlParser.Condition_wrapperContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.condition_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition_wrapper([NotNull] PlSqlParser.Condition_wrapperContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] PlSqlParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] PlSqlParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.expression_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_wrapper([NotNull] PlSqlParser.Expression_wrapperContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.expression_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_wrapper([NotNull] PlSqlParser.Expression_wrapperContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.logical_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_and_expression([NotNull] PlSqlParser.Logical_and_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.logical_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_and_expression([NotNull] PlSqlParser.Logical_and_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.negated_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegated_expression([NotNull] PlSqlParser.Negated_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.negated_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegated_expression([NotNull] PlSqlParser.Negated_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expression([NotNull] PlSqlParser.Equality_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expression([NotNull] PlSqlParser.Equality_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.multiset_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiset_part([NotNull] PlSqlParser.Multiset_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.multiset_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiset_part([NotNull] PlSqlParser.Multiset_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.multiset_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiset_expression([NotNull] PlSqlParser.Multiset_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.multiset_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiset_expression([NotNull] PlSqlParser.Multiset_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.multiset_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiset_type([NotNull] PlSqlParser.Multiset_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.multiset_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiset_type([NotNull] PlSqlParser.Multiset_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_expression([NotNull] PlSqlParser.Relational_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_expression([NotNull] PlSqlParser.Relational_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.compound_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_expression([NotNull] PlSqlParser.Compound_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.compound_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_expression([NotNull] PlSqlParser.Compound_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.like_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLike_type([NotNull] PlSqlParser.Like_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.like_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLike_type([NotNull] PlSqlParser.Like_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.like_escape_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLike_escape_part([NotNull] PlSqlParser.Like_escape_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.like_escape_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLike_escape_part([NotNull] PlSqlParser.Like_escape_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.in_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIn_elements([NotNull] PlSqlParser.In_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.in_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIn_elements([NotNull] PlSqlParser.In_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.between_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetween_elements([NotNull] PlSqlParser.Between_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.between_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetween_elements([NotNull] PlSqlParser.Between_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.concatenation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcatenation([NotNull] PlSqlParser.ConcatenationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.concatenation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcatenation([NotNull] PlSqlParser.ConcatenationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.concatenation_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcatenation_wrapper([NotNull] PlSqlParser.Concatenation_wrapperContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.concatenation_wrapper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcatenation_wrapper([NotNull] PlSqlParser.Concatenation_wrapperContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_expression([NotNull] PlSqlParser.Additive_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_expression([NotNull] PlSqlParser.Additive_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.multiply_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiply_expression([NotNull] PlSqlParser.Multiply_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.multiply_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiply_expression([NotNull] PlSqlParser.Multiply_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.datetime_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatetime_expression([NotNull] PlSqlParser.Datetime_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.datetime_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatetime_expression([NotNull] PlSqlParser.Datetime_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.interval_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterval_expression([NotNull] PlSqlParser.Interval_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.interval_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterval_expression([NotNull] PlSqlParser.Interval_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_expression([NotNull] PlSqlParser.Model_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_expression([NotNull] PlSqlParser.Model_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.model_expression_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModel_expression_element([NotNull] PlSqlParser.Model_expression_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.model_expression_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModel_expression_element([NotNull] PlSqlParser.Model_expression_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.single_column_for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingle_column_for_loop([NotNull] PlSqlParser.Single_column_for_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.single_column_for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingle_column_for_loop([NotNull] PlSqlParser.Single_column_for_loopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.for_like_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_like_part([NotNull] PlSqlParser.For_like_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.for_like_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_like_part([NotNull] PlSqlParser.For_like_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.for_increment_decrement_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_increment_decrement_type([NotNull] PlSqlParser.For_increment_decrement_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.for_increment_decrement_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_increment_decrement_type([NotNull] PlSqlParser.For_increment_decrement_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.multi_column_for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulti_column_for_loop([NotNull] PlSqlParser.Multi_column_for_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.multi_column_for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulti_column_for_loop([NotNull] PlSqlParser.Multi_column_for_loopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expression([NotNull] PlSqlParser.Unary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expression([NotNull] PlSqlParser.Unary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_statement([NotNull] PlSqlParser.Case_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_statement([NotNull] PlSqlParser.Case_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.simple_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_case_statement([NotNull] PlSqlParser.Simple_case_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.simple_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_case_statement([NotNull] PlSqlParser.Simple_case_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.simple_case_when_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_case_when_part([NotNull] PlSqlParser.Simple_case_when_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.simple_case_when_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_case_when_part([NotNull] PlSqlParser.Simple_case_when_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.searched_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSearched_case_statement([NotNull] PlSqlParser.Searched_case_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.searched_case_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSearched_case_statement([NotNull] PlSqlParser.Searched_case_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.searched_case_when_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSearched_case_when_part([NotNull] PlSqlParser.Searched_case_when_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.searched_case_when_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSearched_case_when_part([NotNull] PlSqlParser.Searched_case_when_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.case_else_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_else_part([NotNull] PlSqlParser.Case_else_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.case_else_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_else_part([NotNull] PlSqlParser.Case_else_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] PlSqlParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] PlSqlParser.AtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.expression_or_vector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_or_vector([NotNull] PlSqlParser.Expression_or_vectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.expression_or_vector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_or_vector([NotNull] PlSqlParser.Expression_or_vectorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.vector_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVector_expr([NotNull] PlSqlParser.Vector_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.vector_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVector_expr([NotNull] PlSqlParser.Vector_exprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.quantified_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantified_expression([NotNull] PlSqlParser.Quantified_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.quantified_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantified_expression([NotNull] PlSqlParser.Quantified_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.plsql_type_conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlsql_type_conversion([NotNull] PlSqlParser.Plsql_type_conversionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.plsql_type_conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlsql_type_conversion([NotNull] PlSqlParser.Plsql_type_conversionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sql_type_conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_type_conversion([NotNull] PlSqlParser.Sql_type_conversionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sql_type_conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_type_conversion([NotNull] PlSqlParser.Sql_type_conversionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_table_columns"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_table_columns([NotNull] PlSqlParser.Xml_table_columnsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_table_columns"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_table_columns([NotNull] PlSqlParser.Xml_table_columnsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_table([NotNull] PlSqlParser.Xml_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_table([NotNull] PlSqlParser.Xml_tableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.standard_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStandard_function([NotNull] PlSqlParser.Standard_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.standard_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStandard_function([NotNull] PlSqlParser.Standard_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.over_clause_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOver_clause_keyword([NotNull] PlSqlParser.Over_clause_keywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.over_clause_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOver_clause_keyword([NotNull] PlSqlParser.Over_clause_keywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.within_or_over_clause_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithin_or_over_clause_keyword([NotNull] PlSqlParser.Within_or_over_clause_keywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.within_or_over_clause_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithin_or_over_clause_keyword([NotNull] PlSqlParser.Within_or_over_clause_keywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.standard_prediction_function_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStandard_prediction_function_keyword([NotNull] PlSqlParser.Standard_prediction_function_keywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.standard_prediction_function_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStandard_prediction_function_keyword([NotNull] PlSqlParser.Standard_prediction_function_keywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.over_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOver_clause([NotNull] PlSqlParser.Over_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.over_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOver_clause([NotNull] PlSqlParser.Over_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.windowing_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWindowing_clause([NotNull] PlSqlParser.Windowing_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.windowing_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWindowing_clause([NotNull] PlSqlParser.Windowing_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.windowing_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWindowing_type([NotNull] PlSqlParser.Windowing_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.windowing_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWindowing_type([NotNull] PlSqlParser.Windowing_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.windowing_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWindowing_elements([NotNull] PlSqlParser.Windowing_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.windowing_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWindowing_elements([NotNull] PlSqlParser.Windowing_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.using_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_clause([NotNull] PlSqlParser.Using_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.using_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_clause([NotNull] PlSqlParser.Using_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.using_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_element([NotNull] PlSqlParser.Using_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.using_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_element([NotNull] PlSqlParser.Using_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.collect_order_by_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollect_order_by_part([NotNull] PlSqlParser.Collect_order_by_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.collect_order_by_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollect_order_by_part([NotNull] PlSqlParser.Collect_order_by_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.within_or_over_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithin_or_over_part([NotNull] PlSqlParser.Within_or_over_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.within_or_over_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithin_or_over_part([NotNull] PlSqlParser.Within_or_over_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cost_matrix_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCost_matrix_clause([NotNull] PlSqlParser.Cost_matrix_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cost_matrix_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCost_matrix_clause([NotNull] PlSqlParser.Cost_matrix_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_passing_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_passing_clause([NotNull] PlSqlParser.Xml_passing_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_passing_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_passing_clause([NotNull] PlSqlParser.Xml_passing_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_attributes_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_attributes_clause([NotNull] PlSqlParser.Xml_attributes_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_attributes_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_attributes_clause([NotNull] PlSqlParser.Xml_attributes_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_namespaces_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_namespaces_clause([NotNull] PlSqlParser.Xml_namespaces_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_namespaces_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_namespaces_clause([NotNull] PlSqlParser.Xml_namespaces_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_table_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_table_column([NotNull] PlSqlParser.Xml_table_columnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_table_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_table_column([NotNull] PlSqlParser.Xml_table_columnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_general_default_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_general_default_part([NotNull] PlSqlParser.Xml_general_default_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_general_default_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_general_default_part([NotNull] PlSqlParser.Xml_general_default_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_multiuse_expression_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_multiuse_expression_element([NotNull] PlSqlParser.Xml_multiuse_expression_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_multiuse_expression_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_multiuse_expression_element([NotNull] PlSqlParser.Xml_multiuse_expression_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xmlroot_param_version_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXmlroot_param_version_part([NotNull] PlSqlParser.Xmlroot_param_version_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xmlroot_param_version_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXmlroot_param_version_part([NotNull] PlSqlParser.Xmlroot_param_version_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xmlroot_param_standalone_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXmlroot_param_standalone_part([NotNull] PlSqlParser.Xmlroot_param_standalone_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xmlroot_param_standalone_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXmlroot_param_standalone_part([NotNull] PlSqlParser.Xmlroot_param_standalone_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xmlserialize_param_enconding_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXmlserialize_param_enconding_part([NotNull] PlSqlParser.Xmlserialize_param_enconding_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xmlserialize_param_enconding_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXmlserialize_param_enconding_part([NotNull] PlSqlParser.Xmlserialize_param_enconding_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xmlserialize_param_version_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXmlserialize_param_version_part([NotNull] PlSqlParser.Xmlserialize_param_version_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xmlserialize_param_version_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXmlserialize_param_version_part([NotNull] PlSqlParser.Xmlserialize_param_version_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xmlserialize_param_ident_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXmlserialize_param_ident_part([NotNull] PlSqlParser.Xmlserialize_param_ident_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xmlserialize_param_ident_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXmlserialize_param_ident_part([NotNull] PlSqlParser.Xmlserialize_param_ident_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.boolean_static_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_static_expression([NotNull] PlSqlParser.Boolean_static_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.boolean_static_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_static_expression([NotNull] PlSqlParser.Boolean_static_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.preprocessor_internal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessor_internal_statement([NotNull] PlSqlParser.Preprocessor_internal_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.preprocessor_internal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessor_internal_statement([NotNull] PlSqlParser.Preprocessor_internal_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.preprocessor_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessor_statement([NotNull] PlSqlParser.Preprocessor_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.preprocessor_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessor_statement([NotNull] PlSqlParser.Preprocessor_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.partition_extension_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartition_extension_clause([NotNull] PlSqlParser.Partition_extension_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.partition_extension_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartition_extension_clause([NotNull] PlSqlParser.Partition_extension_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.column_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_alias([NotNull] PlSqlParser.Column_aliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.column_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_alias([NotNull] PlSqlParser.Column_aliasContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_alias([NotNull] PlSqlParser.Table_aliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_alias([NotNull] PlSqlParser.Table_aliasContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.alias_quoted_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlias_quoted_string([NotNull] PlSqlParser.Alias_quoted_stringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.alias_quoted_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlias_quoted_string([NotNull] PlSqlParser.Alias_quoted_stringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_clause([NotNull] PlSqlParser.Where_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_clause([NotNull] PlSqlParser.Where_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.current_of_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCurrent_of_clause([NotNull] PlSqlParser.Current_of_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.current_of_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCurrent_of_clause([NotNull] PlSqlParser.Current_of_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.into_clause_variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInto_clause_variable([NotNull] PlSqlParser.Into_clause_variableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.into_clause_variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInto_clause_variable([NotNull] PlSqlParser.Into_clause_variableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.into_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInto_clause([NotNull] PlSqlParser.Into_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.into_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInto_clause([NotNull] PlSqlParser.Into_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.xml_column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXml_column_name([NotNull] PlSqlParser.Xml_column_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.xml_column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXml_column_name([NotNull] PlSqlParser.Xml_column_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cost_class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCost_class_name([NotNull] PlSqlParser.Cost_class_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cost_class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCost_class_name([NotNull] PlSqlParser.Cost_class_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.attribute_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_name([NotNull] PlSqlParser.Attribute_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.attribute_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_name([NotNull] PlSqlParser.Attribute_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.savepoint_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSavepoint_name([NotNull] PlSqlParser.Savepoint_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.savepoint_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSavepoint_name([NotNull] PlSqlParser.Savepoint_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.rollback_segment_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRollback_segment_name([NotNull] PlSqlParser.Rollback_segment_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.rollback_segment_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRollback_segment_name([NotNull] PlSqlParser.Rollback_segment_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_var_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_var_name([NotNull] PlSqlParser.Table_var_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_var_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_var_name([NotNull] PlSqlParser.Table_var_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.schema_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSchema_name([NotNull] PlSqlParser.Schema_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.schema_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSchema_name([NotNull] PlSqlParser.Schema_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.routine_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoutine_name([NotNull] PlSqlParser.Routine_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.routine_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoutine_name([NotNull] PlSqlParser.Routine_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.package_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_name([NotNull] PlSqlParser.Package_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.package_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_name([NotNull] PlSqlParser.Package_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.implementation_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementation_type_name([NotNull] PlSqlParser.Implementation_type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.implementation_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementation_type_name([NotNull] PlSqlParser.Implementation_type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.parameter_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_name([NotNull] PlSqlParser.Parameter_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.parameter_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_name([NotNull] PlSqlParser.Parameter_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.reference_model_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReference_model_name([NotNull] PlSqlParser.Reference_model_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.reference_model_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReference_model_name([NotNull] PlSqlParser.Reference_model_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.main_model_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain_model_name([NotNull] PlSqlParser.Main_model_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.main_model_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain_model_name([NotNull] PlSqlParser.Main_model_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.aggregate_function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregate_function_name([NotNull] PlSqlParser.Aggregate_function_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.aggregate_function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregate_function_name([NotNull] PlSqlParser.Aggregate_function_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.query_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_name([NotNull] PlSqlParser.Query_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.query_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_name([NotNull] PlSqlParser.Query_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.constraint_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstraint_name([NotNull] PlSqlParser.Constraint_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.constraint_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstraint_name([NotNull] PlSqlParser.Constraint_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.label_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel_name([NotNull] PlSqlParser.Label_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.label_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel_name([NotNull] PlSqlParser.Label_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_name([NotNull] PlSqlParser.Type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_name([NotNull] PlSqlParser.Type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.sequence_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequence_name([NotNull] PlSqlParser.Sequence_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.sequence_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequence_name([NotNull] PlSqlParser.Sequence_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.exception_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterException_name([NotNull] PlSqlParser.Exception_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.exception_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitException_name([NotNull] PlSqlParser.Exception_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_name([NotNull] PlSqlParser.Function_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_name([NotNull] PlSqlParser.Function_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.procedure_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedure_name([NotNull] PlSqlParser.Procedure_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.procedure_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedure_name([NotNull] PlSqlParser.Procedure_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.trigger_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger_name([NotNull] PlSqlParser.Trigger_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.trigger_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger_name([NotNull] PlSqlParser.Trigger_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.variable_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_name([NotNull] PlSqlParser.Variable_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.variable_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_name([NotNull] PlSqlParser.Variable_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_name([NotNull] PlSqlParser.Index_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_name([NotNull] PlSqlParser.Index_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.cursor_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCursor_name([NotNull] PlSqlParser.Cursor_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.cursor_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCursor_name([NotNull] PlSqlParser.Cursor_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.record_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecord_name([NotNull] PlSqlParser.Record_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.record_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecord_name([NotNull] PlSqlParser.Record_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.collection_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection_name([NotNull] PlSqlParser.Collection_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.collection_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection_name([NotNull] PlSqlParser.Collection_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.link_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLink_name([NotNull] PlSqlParser.Link_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.link_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLink_name([NotNull] PlSqlParser.Link_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_name([NotNull] PlSqlParser.Column_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_name([NotNull] PlSqlParser.Column_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.tableview_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTableview_name([NotNull] PlSqlParser.Tableview_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.tableview_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTableview_name([NotNull] PlSqlParser.Tableview_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.char_set_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChar_set_name([NotNull] PlSqlParser.Char_set_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.char_set_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChar_set_name([NotNull] PlSqlParser.Char_set_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.keep_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeep_clause([NotNull] PlSqlParser.Keep_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.keep_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeep_clause([NotNull] PlSqlParser.Keep_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument([NotNull] PlSqlParser.Function_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument([NotNull] PlSqlParser.Function_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.function_argument_analytic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument_analytic([NotNull] PlSqlParser.Function_argument_analyticContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.function_argument_analytic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument_analytic([NotNull] PlSqlParser.Function_argument_analyticContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.function_argument_modeling"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument_modeling([NotNull] PlSqlParser.Function_argument_modelingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.function_argument_modeling"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument_modeling([NotNull] PlSqlParser.Function_argument_modelingContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.respect_or_ignore_nulls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRespect_or_ignore_nulls([NotNull] PlSqlParser.Respect_or_ignore_nullsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.respect_or_ignore_nulls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRespect_or_ignore_nulls([NotNull] PlSqlParser.Respect_or_ignore_nullsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] PlSqlParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] PlSqlParser.ArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.type_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_spec([NotNull] PlSqlParser.Type_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.type_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_spec([NotNull] PlSqlParser.Type_specContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.datatype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatatype([NotNull] PlSqlParser.DatatypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.datatype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatatype([NotNull] PlSqlParser.DatatypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.precision_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrecision_part([NotNull] PlSqlParser.Precision_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.precision_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrecision_part([NotNull] PlSqlParser.Precision_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.native_datatype_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_datatype_element([NotNull] PlSqlParser.Native_datatype_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.native_datatype_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_datatype_element([NotNull] PlSqlParser.Native_datatype_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.bind_variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBind_variable([NotNull] PlSqlParser.Bind_variableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.bind_variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBind_variable([NotNull] PlSqlParser.Bind_variableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.general_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneral_element([NotNull] PlSqlParser.General_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.general_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneral_element([NotNull] PlSqlParser.General_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.general_element_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneral_element_part([NotNull] PlSqlParser.General_element_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.general_element_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneral_element_part([NotNull] PlSqlParser.General_element_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.table_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_element([NotNull] PlSqlParser.Table_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.table_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_element([NotNull] PlSqlParser.Table_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] PlSqlParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] PlSqlParser.ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.numeric"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric([NotNull] PlSqlParser.NumericContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.numeric"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric([NotNull] PlSqlParser.NumericContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.quoted_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuoted_string([NotNull] PlSqlParser.Quoted_stringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.quoted_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuoted_string([NotNull] PlSqlParser.Quoted_stringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] PlSqlParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] PlSqlParser.IdContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.id_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId_expression([NotNull] PlSqlParser.Id_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.id_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId_expression([NotNull] PlSqlParser.Id_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.not_equal_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot_equal_op([NotNull] PlSqlParser.Not_equal_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.not_equal_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot_equal_op([NotNull] PlSqlParser.Not_equal_opContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.greater_than_or_equals_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGreater_than_or_equals_op([NotNull] PlSqlParser.Greater_than_or_equals_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.greater_than_or_equals_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGreater_than_or_equals_op([NotNull] PlSqlParser.Greater_than_or_equals_opContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.less_than_or_equals_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLess_than_or_equals_op([NotNull] PlSqlParser.Less_than_or_equals_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.less_than_or_equals_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLess_than_or_equals_op([NotNull] PlSqlParser.Less_than_or_equals_opContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.concatenation_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcatenation_op([NotNull] PlSqlParser.Concatenation_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.concatenation_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcatenation_op([NotNull] PlSqlParser.Concatenation_opContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.outer_join_sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOuter_join_sign([NotNull] PlSqlParser.Outer_join_signContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.outer_join_sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOuter_join_sign([NotNull] PlSqlParser.Outer_join_signContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlSqlParser.regular_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegular_id([NotNull] PlSqlParser.Regular_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlSqlParser.regular_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegular_id([NotNull] PlSqlParser.Regular_idContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
